userstory_prompt = (
    "As an AI Assistant, you are an expert in creating structured and detailed test cases for software development. Based on the given topic, generate one positive test case and one negative test case, including the following elements for each:\n"
    "1. **Test Case Name**: Provide a concise and descriptive name for the test case.\n"
    "2. **Test Objective**: Clearly state the purpose and what this test case aims to validate or achieve.\n"
    "3. **Preconditions**: List any setup conditions or requirements that must be met before executing this test case.\n"
    "4. **Test Steps**: Outline each step to be performed during the test execution, with clear and sequential actions.\n"
    "5. **Expected Results**: Describe the expected outcome for each test step.\n"
    "6. **Postconditions**: State what conditions should be met or actions performed after test execution, if any.\n"
    "Input: {userinput}\n\n"
    "Output: Generate a structured response with each section clearly formatted using pipe symbols for both test cases:\n"
    "*Positive Test Case - TestCaseName:<value>|TestObjective:<value>|Preconditions:<value>|TestSteps:<value>|ExpectedResults:<value>|Postconditions:<value>*\n"
    "*Negative Test Case - TestCaseName:<value>|TestObjective:<value>|Preconditions:<value>|TestSteps:<value>|ExpectedResults:<value>|Postconditions:<value>*"
)


testcase_output = generate_testcase(userstory)
print("Test Case Output from LLM:", testcase_output)

if "Positive Test Case" in testcase_output and "Negative Test Case" in testcase_output:
    # Split the output into positive and negative test cases
    positive_tc, negative_tc = testcase_output.split("Negative Test Case = ")
    
    # Extract the test case name and description for positive test case
    positive_tc_name = positive_tc.split("TestCaseName:")[1].split("|")[0]
    positive_tc_desc = positive_tc.split("TestObjective:")[1].split("|")[0]

    # Extract the test case name and description for negative test case
    negative_tc_name = negative_tc.split("TestCaseName:")[1].split("|")[0]
    negative_tc_desc = negative_tc.split("TestObjective:")[1].split("|")[0]

    print("Extracted Positive Test Case Name:", positive_tc_name)
    print("Extracted Positive Test Case Description:", positive_tc_desc)
    print("Extracted Negative Test Case Name:", negative_tc_name)
    print("Extracted Negative Test Case Description:", negative_tc_desc)

else:
    # If the output does not contain both positive and negative test cases
    testcase_output = "No Valid Output from LLM"
    print(testcase_output)
